== qDot's Readme

I'm a code janitor!

=== So you want to play with the kinect right now

First off, the kinect code here is in such a massive amount of flux as
to like, totally not even be funny. You are so amazingly on your own
right now, but feel free to hit the #openkinect IRC channel on
Freenode for questions.

What you'll get when compiling this branch:

- the libfreenect library, not the it does a whole lot right now.
- an executable called glview. glview will render depth data next to
  rgb data in a glut window.

==== Building with CMake

To use CMake:

- Make a directory somewhere. Like, say, c/build in your repo directory.
- Go into that directory
- Type cmake ..
- Watch the magic happen
- After this, just run make and you'll be fine.
- If you want to use an IDE or whatever, well, you'll figure it out.

==== Linux

Should "just work" if you have the following packages installed:

- libusb-1.0-dev
- freeglut3-dev (or whatever freeglut dev package your distro has)

Since there's no udev rules yet, you'll need to run glview as
root. Deal with it.

==== OS X

NOTE: AS OF 2010-11-16, WE HAVE UPDATED THIS PATCH. IF YOU HAVE
ALREADY PATCHED, PLEASE REPATCH AND REINSTALL LIBUSB TO GET OS X
WORKING AT FULL 30FPS.

You will need to pull the libusb-1.0 repo head and patch using the
files in platform/osx/. Just go to the root directory of the cloned
libusb-1.0 repo and run

patch -p1 < [path_to_OpenKinectRepo]/platform/osx/libusb-osx-kinect.diff

Recompile libusb and put it wherever CMake will look (/usr/local/lib,
/usr/lib, etc...). If you're using a package manager like fink,
macports, or homebrew, I'm going to expect you know what your doing
and can deal with this. If not, see IRC channel.

==== Windows

We're still working on that. This branch still does not work on
windows. If you're jonesin' for windows, check out the win32-merge
branch, though we'll be moving toward the new-api branch ASAP.

=== And everyone else...

Below is the readmes of the other repos I'm organizing this from. This
currently consists of:

- Marcan's original libfreenect repo (in the c directory here) -
  GPL'd.
- ofTheo's OS X libfreenect patched (integrated by me, with libusb-1.0
  patches in platform directory) - GPL'd
- JoshBlake's C# OpenKinect (in the csharp directory, with inf files
  in platform directory) - Apache'd
- Brandyn's Python bindings (in c/python, see README there)

The aggregated READMEs are below.

== Marcan's Readme

Horribly hacky first take at a Kinect Camera driver. Does RGB and Depth.

main.c implements a simple OpenGL visualization. Hopefully it should be mostly
self-explanatory... You pretty much just open the USB device, call
cams_init(dev, depthimg, rgbimg), and your depthimg and rgbimg callbacks get
called as libusb processes events.

TODO:

- TONS of cleanup. I mean LOTS.
- Determine exactly what the inits do
- Bayer to RGB conversion that doesn't suck
- Integrate support for the servo and accelerometer (which have already been reverse engineered)

BIG TODO: audio. The audio chip (the Marvell) requires firmware and more init
and does a TON of stuff including the crypto authentication to prove that it is
an original Kinect and not a clone. Who knows what this thing does to the
incoming audio. This should be interesting to look at.

Libfreenect is Copyright (C) 2010  Hector Martin "marcan" <hector@marcansoft.com>

This code is licensed to you under the terms of the GNU GPL, version 2 or
version 3; see:
 http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt
 http://www.gnu.org/licenses/gpl-3.0.txt

Credits:

Adafruit, for providing the USB logs that I used to work out the initialization
sequence and data format.

bushing, for trying to provide USB logs, although he got preempted by Adafruit ;)

A few other people who provided hints and encouragement along the way, you know
who you are!

== Josh Blake's Readme

OpenKinect project

Copyright (c) 2010 Joshua Blake and other contributors

The folder INF contains Windows drivers. Plug in Kinect and during the driver installation browse to the proper folder. The drivers were generated via libusbdotnet tools and are distributed under their own licenses.

The rest of the project is distributed under the Apache 2 license.

